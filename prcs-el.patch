--- prcs-1.2.15.orig/emacs/prcs-callback
+++ prcs-1.2.15/emacs/prcs-callback
@@ -0,0 +1,32 @@
+#!/bin/sh
+
+# This file is associated with `prcs.el' and shares its copyright and
+# disclaimers. Contact Jesse Glick <Jesse.Glick@netbeans.com> for
+# information and to report bugs.
+#
+# $PrcsModeVersion: 1.61 on Sat, 06 Feb 1999 17:57:04 -0500 $
+
+# When called with some number of arguments, this script:
+#
+# 1. Prints a special magic token on a line by itself.
+# 2. Prints the number of args on a line by itself.
+# 3. Prints each of the args in turn on their own lines.
+# 4. Waits for input.
+# 5. Reads a line (should be an integer), and exits with that status.
+
+# Used by prcs.el as a value for $PRCS_DIFF_COMMAND or $PRCS_MERGE_COMMAND.
+# The token is used to identify its execution in a general comint buffer.
+
+# Do not let the uninterrupted token itself appear in any source code!
+magic_1='MaGiC-PrCs-'
+magic_2='CaLlBaCk-ToKeN'
+# Read & write from/to tty because o.w. PRCS tries to snatch up our
+# input and incorrectly buffer our output, devilishly.
+(
+    echo "$magic_1$magic_2"
+    echo "$#"
+    for arg; do echo "$arg"; done
+) > /dev/tty
+read status < /dev/tty
+# echo $* $status >>/tmp/pc-trace
+exit $status
--- prcs-1.2.15.orig/emacs/prcs.el
+++ prcs-1.2.15/emacs/prcs.el
@@ -4,7 +4,7 @@
 ;;
 ;; Emacs major & minor modes for PRCS support.
 ;;
-;; $PrcsModeVersion: 1.60 on Sun, 07 Feb 1999 15:23:03 -0500 $
+;; $PrcsModeVersion: 1.61 on Sat, 25 Mar 2000 11:39:26 -0500 $
 ;;
 ;; Original implementation, Josh MacDonald. Most of this file by Jesse
 ;; Glick <Jesse.Glick@netbeans.com>; concepts also due to Zack
@@ -40,13 +40,11 @@
 ;; be PRCS Controlled (i.e. there is a project file above it
 ;; somewhere).
 
-(eval-and-compile (setq load-path (cons ".." (cons "." load-path))))
 (require 'lisp-mode)
 (require 'emerge)
 (require 'cl)
 (require 'add-log)
 (require 'prcs-hooks)
-(eval-and-compile (setq load-path (cdr (cdr load-path))))
 
 (defcustom prcs-sloppy-version-prompts nil
   "*Use fast but unsafe version prompts?
@@ -242,7 +240,11 @@
   `(
    (,(concat "(\\(" prcs-prj-descriptor-regex "\\)\\>")
     1 font-lock-function-name-face)
-   ("^\\s-*(\\(\\([^ \n\t;()\"]\\|\\\\.\\)+\\)\\s-+(\\(\\S-+/\\([^ \n\t;()\"]\\|\\\\.\\)+\\s-+[0-9.]+\\s-+[0-9]+\\))" (1 font-lock-type-face) (3 font-lock-string-face))
+   ;; CAUTION! Proper syntax scanning requires that neither
+   ;; string-face nor comment-face be used for things which are
+   ;; actually symbols as far as the parse goes: file names, file
+   ;; families, symlink targets. So using other faces for these.
+   ("^\\s-*(\\(\\([^ \n\t;()\"]\\|\\\\.\\)+\\)\\s-+(\\(\\S-+/\\([^ \n\t;()\"]\\|\\\\.\\)+\\s-+[0-9.]+\\s-+[0-9]+\\))" (1 font-lock-type-face) (3 font-lock-variable-name-face))
    ("^\\s-*(\\(\\([^ \n\t;()\"]\\|\\\\.\\)+\\)\\s-+(\\(\\([^ \n\t;()\"]\\|\\\\.\\)+\\)).*\\<:symlink\\>" (1 font-lock-type-face) (3 font-lock-reference-face))
    ("^\\s-*(\\(\\([^ \n\t;()\"]\\|\\\\.\\)+\\)\\s-+(\\s-*)" (1 font-lock-type-face))
    ("\\<:\\sw+\\>" 0 font-lock-keyword-face prepend)
@@ -427,6 +429,7 @@
 
 (defun prcs-escape-syntactic-nastiness ()
   "Escape symbols in current project buffers beginning with dot.
+Also escapes pound signs, with the assumption that they are part of a filename.
 Operates heuristically, so is not foolproof, but mistakes
 probably won't cause any harm. Skips over anything which font-lock
 claims is a comment or string."
@@ -436,17 +439,29 @@
       (unless (y-or-n-p (format "PRCS Major Mode wants to escape filenames in read-only buffer %s. Continue? " (buffer-file-name)))
 	(error "Cannot escape filenames for PRCS parse"))
       (setq buffer-read-only nil))
+    (message "Fontifying syntactically before escaping filenames...")
+    (font-lock-fontify-syntactically-region (point-min) (point-max))
     (message "Escaping filenames...")
     (goto-char (point-min))
-    (while (search-forward-regexp "(\\(\\.+\\)" nil t)
-      (case (get-text-property (match-beginning 1) 'face)
-	(font-lock-comment-face)
-	(font-lock-string-face)
-	(t (goto-char (match-beginning 1))
-	   (dotimes (ignore (- (match-end 1) (match-beginning 1)))
-	     (insert ?\\)
-	     (forward-char 1))
-	   (goto-char (match-end 0)))))
+    ;; Sequence of dots after an lparen, or pound sign, outside
+    ;; comments and strings. Note that "comments and strings" includes
+    ;; only syntactically recognized ones (since we only did a
+    ;; syntactic fontification above), so pound signs escaped by
+    ;; backslashes will still be in black, so we must explicitly check
+    ;; for them. Note that the font-lock keywords must not put what
+    ;; are syntactically symbols into string or comment faces, since
+    ;; the buffer might have already been fontified.
+    (while (search-forward-regexp "\\((\\(\\.+\\)\\)\\|\\(^\\|[^\\\\]\\)\\(#\\)" nil t)
+      (let ((subexp (if (match-beginning 2) 2 4)))
+	(case (get-text-property (match-beginning subexp) 'face)
+	  (font-lock-comment-face)
+	  (font-lock-string-face)
+	  (t (goto-char (match-beginning subexp))
+	     (let ((escape-count (- (match-end subexp) (match-beginning subexp))))
+	       (dotimes (ignore escape-count)
+		 (insert ?\\)
+		 (forward-char 1))
+	       (goto-char (+ (match-end 0) escape-count)))))))
     (message "Escaping filenames...done")
     (when orig-ro (setq buffer-read-only t))
     (when (and (not orig-mod) (buffer-modified-p))
--- prcs-1.2.15.orig/emacs/prcs-hooks.el
+++ prcs-1.2.15/emacs/prcs-hooks.el
@@ -2,16 +2,14 @@
 ;; disclaimers. Contact Jesse Glick <Jesse.Glick@netbeans.com> for
 ;; information and to report bugs.
 ;;
-;; $PrcsModeVersion: 1.60 on Sun, 07 Feb 1999 15:23:03 -0500 $
+;; $PrcsModeVersion: 1.61 on Sun, 07 Feb 1999 15:23:03 -0500 $
 
-(eval-and-compile (setq load-path (cons ".." (cons "." load-path))))
 (require 'custom)
 ;; XXX would be nice but a pain to remove this requirement:
 (require 'cl)
 ;; Generally already loaded into Emacs image; need `C-x v' keymap to
 ;; already exist, `vc-follow-symlinks', `vc-follow-link':
 (require 'vc-hooks)
-(eval-and-compile (setq load-path (cdr (cdr load-path))))
 
 (autoload 'prcs-jump-to-project-file "prcs" nil t)
 (autoload 'prcs-mode "prcs" nil t)
--- prcs-1.2.15.orig/emacs/prcs-el-todo.txt
+++ prcs-1.2.15/emacs/prcs-el-todo.txt
@@ -4,7 +4,7 @@
 disclaimers. Contact Jesse Glick <Jesse.Glick@netbeans.com> for
 information and to report bugs.
 
-$PrcsModeVersion: 1.60 on Sun, 07 Feb 1999 19:05:45 -0500 $
+$PrcsModeVersion: 1.61 on Sat, 25 Mar 2000 11:39:26 -0500 $
 
 
 * Inline Issues
@@ -45,10 +45,6 @@
 proper; prcs: informational prompts; diff *** bars; &c.); settings for e.g.
 Outline and para-movement stuff, based on separators; and so forth.
 
-** Better filename escaping
-More thorough patterns for `prcs-escape-syntactic-nastiness'. E.g., handle
-pound signs in filenames (though why anyone would have such beats me).
-
 ** Nested projects
 What happens w/ nested projects? Presumably the subproject p-file usually acts
 as if it belonged to the subproject, though refreshes & the like may still
@@ -75,6 +71,12 @@
 ** XEmacs toolbar support
 Would be cute to add some toolbar hooks to XEmacs. E.g. a "PRCS" button added
 to the toolbar when in PRCS Controlled Mode at least.
+
+** Better filename escaping
+More thorough patterns for `prcs-escape-syntactic-nastiness'. Already handles
+files beginning with dots, ../ in symlinks, and filenames containing pound
+signs. These seemed to be the only commonly occurring problems. More kinds of
+exceptions could be handled if needed, though.
 
 ** `prcs-ask-about-save' <- `vc-suppress-confirm'
 But think about effect on refreshes, which should be controllable separately.
